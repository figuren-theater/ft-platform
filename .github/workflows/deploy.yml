# With this workflow, whenever you publish a new release, 
# GitHub will trigger the workflow and run the deploy job, 
# which will install the dependencies, build the project, 
# and deploy the new or updated files to the remote server.

name: Release Deploy Workflow

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

  #    - name: Cache dependencies
  #      uses: actions/cache@v2
  #      with:
  #        path: ~/.composer/cache/files
  #        key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}

   #   - name: Get Composer cache directory
   #     id: composer-cache
   #     run: |
   #       echo "composer_dir={$(composer config cache-files-dir)}" >> $GITHUB_OUTPUT

      - name: Retrieve Composerâ€˜s cache
        uses: actions/cache@v3
        with:
          # path: ${{ steps.composer-cache.outputs.composer_dir }}
          path: /
          key: ${{ runner.os }}-composer-${{ hashFiles('README.md') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      
      - name: Prepare auth Token
        run: composer global config github-oauth.github.com ${{ secrets.GITHUB_TOKEN }}
        
      - name: Install composer dependencies
        run: composer install --no-dev --prefer-dist --no-interaction
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install all other dependencies
        run: composer require -W figuren-theater/ft-platform-curation:dev-main
        
      - name: Help moving files (which koodimoni/dropin-installer is not capable for, see #11)
        run: |
          cp content/mu-plugins/FT/ft-data/templates/htdocs/vendor/rss-bridge/rss-bridge/whitelist.txt vendor/rss-bridge/rss-bridge/whitelist.txt &&
          cp content/mu-plugins/FT/ft-maintenance/templates/htdocs/wp-content/maintenance.php content/maintenance.php
 

      - name: Deploy
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: ftps
          port: 21
          timeout: 180000 # 3 min
          exclude: |
            tmp
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/wp-content/plugins/**
            **/wp-content/themes/**
            **/.editorconfig
            # figuren-theater/ft-theming/wp-better-emails --> Error: Error: Server sent FIN packet unexpectedly ...
            **/wp-better-emails/preview.html
            # figuren-theater/ft-data/distributor --> Error: Error: Server sent FIN packet unexpectedly ...
            **/distributor/lang/distributor.pot
            
